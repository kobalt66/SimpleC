#lib = "std"

namespace stdspace
{
    namespace physics
    {
        struct Vec2
        {
            dbl x;
            dbl y;
            constructor(dbl X, dbl Y)
            {
                x = X;
                y = Y;
            }
        }
        struct Vec3
        {
            dbl x;
            dbl y;
            dbl z;
            constructor(dbl X , dbl Y, dbl Z) : x(X), y(Y), z(Z)
        }
        struct Vec4
        {
            dbl x;
            dbl y;
            dbl z;
            dbl w;
            constructor(dbl X , dbl Y, dbl Z, dbl W) : x(X), y(Y), z(Z), w(W)
        }
    }
}

public class Program
{
    using stdspace.physics.Vec2;
    private static function void Main(var args)
    {
        // Create points.
        Vec2 one = Vec2(1, 2);
        Vec2 two = Vec2(2, 3);

        // Calculation.
        dbl distance = calculate_DistanceVECtwo(one, two);
        Console.WriteLine(distance);
        return;
    }

    private static function dbl calculate_DistanceVECtwo(Vec2 a, Vec2 b)
    {
        // Checking if the two points are two dimensional.
        /*bol check1 = !isClass(a, Vec2);
        bol check2 = !isClass(b, Vec2);
        if (check1 | check2) return;*/

        // Calculating the distance between two points.
        dbl res1 = Math.Sqrt((b.y - a.y) * (b.y - a.y));
        dbl res2 = Math.Sqrt((b.x - a.x) * (b.x - a.x));
        dbl distance = res1 + res2;

        return distance;
    }
}
